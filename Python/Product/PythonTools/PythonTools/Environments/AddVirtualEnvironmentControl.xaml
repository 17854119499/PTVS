<UserControl x:Class="Microsoft.PythonTools.Environments.AddVirtualEnvironmentControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:l="clr-namespace:Microsoft.PythonTools.Environments"
             xmlns:wpf="clr-namespace:Microsoft.VisualStudioTools.Wpf"
             xmlns:ptvs="clr-namespace:Microsoft.PythonTools"
             xmlns:ptwpf="clr-namespace:Microsoft.PythonTools.Wpf"
             xmlns:vstools="clr-namespace:Microsoft.VisualStudioTools"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:common="clr-namespace:Microsoft.PythonTools;assembly=Microsoft.PythonTools.Common"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="730">
    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static wpf:Commands.BrowseFolder}"
                        CanExecute="Browse_CanExecute"
                        Executed="Browse_Executed" />
        <CommandBinding Command="{x:Static wpf:Commands.BrowseOpenFile}"
                        CanExecute="Browse_CanExecute"
                        Executed="Browse_Executed" />
        <CommandBinding Command="{x:Static l:AddVirtualEnvironmentControl.ChangeLocation}"
                        CanExecute="ChangeLocation_CanExecute"
                        Executed="ChangeLocation_Executed" />
    </UserControl.CommandBindings>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Microsoft.PythonTools;component/PythonTools/Wpf/ModernStyles.xaml" />
                <ResourceDictionary>
                    <wpf:Lambda x:Key="BoolToVisible">(bool b) => b ? Visibility.Visible : Visibility.Hidden</wpf:Lambda>
                    <wpf:Lambda x:Key="BoolToVisibleOrCollapsed">(bool b) => b ? Visibility.Visible : Visibility.Collapsed</wpf:Lambda>
                    <wpf:Lambda x:Key="BoolToHidden">(bool b) => b ? Visibility.Hidden : Visibility.Visible</wpf:Lambda>

                    <DataTemplate x:Key="ProjectTemplate">
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" />
                        </StackPanel>
                    </DataTemplate>

                    <DataTemplate x:Key="NameTemplate" DataType="{x:Type l:InterpreterView}">
                        <TextBlock Name="InterpreterName"
                                   Text="{Binding Name}"
                                   Padding="3"/>
                    </DataTemplate>

                    <DataTemplate x:Key="PostActions">
                        <StackPanel>
                            <CheckBox
                                Margin="0 0 0 10"
                                Name="SetAsCurrentCheckBox"
                                IsChecked="{Binding Path=SetAsCurrent}"
                                Content="{x:Static common:Strings.AddEnvironmentSetAsCurrentLabel}"
                                AutomationProperties.AutomationId="SetAsCurrent"
                                AutomationProperties.Name="{x:Static common:Strings.AddEnvironmentSetAsCurrentLabel}"
                                Style="{DynamicResource {x:Static ptwpf:ModernStyles.ThemedDialogCheckBoxStyleKey}}"/>

                            <CheckBox
                                Margin="0 0 0 10"
                                Name="SetAsDefaultCheckBox"
                                IsChecked="{Binding Path=SetAsDefault}"
                                Content="{x:Static common:Strings.AddEnvironmentSetAsDefaultLabel}"
                                AutomationProperties.AutomationId="SetAsDefault"
                                AutomationProperties.Name="{x:Static common:Strings.AddEnvironmentSetAsDefaultLabel}"
                                Style="{DynamicResource {x:Static ptwpf:ModernStyles.ThemedDialogCheckBoxStyleKey}}"/>

                            <CheckBox
                                Margin="0 0 0 10"
                                IsChecked="{Binding Path=ViewInEnvironmentWindow}"
                                Content="{x:Static common:Strings.AddEnvironmentViewInEnvWindowLabel}"
                                AutomationProperties.AutomationId="ViewInEnvironmentWindow"
                                AutomationProperties.Name="{x:Static common:Strings.AddEnvironmentViewInEnvWindowLabel}"
                                Style="{DynamicResource {x:Static ptwpf:ModernStyles.ThemedDialogCheckBoxStyleKey}}"/>

                            <CheckBox
                                Margin="0 0 0 3"
                                x:Name="RegisterCustomEnvCheckBox"
                                IsEnabled="{Binding Path=IsRegisterCustomEnvEnabled}"
                                IsChecked="{Binding Path=IsRegisterCustomEnv}"
                                Content="{x:Static common:Strings.AddExistingEnvironmentRegisterGloballyCheckBox}"
                                AutomationProperties.AutomationId="RegisterGlobally"
                                Style="{DynamicResource {x:Static ptwpf:ModernStyles.ThemedDialogCheckBoxStyleKey}}"/>

                            <wpf:ConfigurationTextBoxWithHelp
                                Margin="23 0 0 24"
                                x:Name="Description"
                                Text="{Binding Path=Description,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=False}"
                                Watermark="{x:Static common:Strings.AddVirtualEnvironmentDescriptionWatermark}"
                                AutomationProperties.AutomationId="Description"
                                AutomationProperties.LabeledBy="{Binding ElementName=RegisterCustomEnvCheckBox}"/>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedProject}" Value="{x:Null}">
                                <Setter TargetName="SetAsCurrentCheckBox" Property="UIElement.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsRegisterCustomEnv}" Value="False">
                                <Setter TargetName="Description" Property="UIElement.IsEnabled" Value="False"/>
                                <Setter TargetName="SetAsDefaultCheckBox" Property="UIElement.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <DataTemplate x:Key="Actions">
                        <Grid>
                            <StackPanel
                                Name="ProgressBar"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Visibility="Collapsed">

                                <imaging:CrispImage
                                    Width="16"
                                    Height="16"
                                    Margin="4 0 0 0"
                                    Moniker="{x:Static catalog:KnownMonikers.Loading}"
                                    RenderTransformOrigin="0.5, 0.5">

                                    <imaging:CrispImage.RenderTransform>
                                        <RotateTransform x:Name="Rotation" />
                                    </imaging:CrispImage.RenderTransform>
                                    <imaging:CrispImage.Triggers>
                                        <EventTrigger RoutedEvent="Image.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="Rotation"
                                                        Storyboard.TargetProperty="Angle"
                                                        By="360.0"
                                                        Duration="0:0:2.0"
                                                        RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </imaging:CrispImage.Triggers>
                                </imaging:CrispImage>
                                <TextBlock
                                    Margin="4 0 0 0"
                                    Text="{x:Static common:Strings.AddVirtualEnvironmentPreviewInProgress}"/>
                            </StackPanel>
                            <StackPanel Name="Actions" Margin="0" Orientation="Vertical">
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Margin" Value="0 0 0 7"/>
                                    </Style>
                                </StackPanel.Resources>
                                <TextBlock
                                    Name="InstallPipAndVirtualEnv"
                                    Text="{x:Static common:Strings.AddVirtualEnvironmentWindow_InstallPipAndVirtualEnv}"/>
                                <TextBlock
                                    Name="InstallPip"
                                    Text="{x:Static common:Strings.AddVirtualEnvironmentWindow_InstallPip}"/>
                                <TextBlock
                                    Name="InstallVirtualEnv"
                                    Text="{x:Static common:Strings.AddVirtualEnvironmentWindow_InstallVirtualEnv}"/>
                                <TextBlock
                                    Name="CreateVirtualEnv"
                                    Text="{x:Static common:Strings.AddVirtualEnvironmentWindow_CreateVirtualEnv}"/>
                                <TextBlock
                                    Name="CreateVEnv"
                                    Text="{x:Static common:Strings.AddVirtualEnvironmentWindow_CreateVEnv}"/>
                                <TextBlock
                                    Name="InstallRequirements"
                                    Text="{x:Static common:Strings.AddVirtualEnvironmentWindow_InstallPackages}"/>
                                <TextBlock
                                    Name="CannotCreate"
                                    Text="{x:Static common:Strings.AddVirtualEnvironmentWindow_CannotCreate}"/>
                            </StackPanel>
                        </Grid>
                        <DataTemplate.Triggers>
                            <!-- Show both Install messages if pip is required,
                                 then hide the Pip+VirtualEnv one if we don't
                                 need virtualenv. -->
                            <DataTrigger Binding="{Binding IsWorking}" Value="True">
                                <Setter TargetName="ProgressBar" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Actions" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WillInstallPip}" Value="True">
                                <Setter TargetName="InstallPip" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WillInstallVirtualEnv}" Value="True">
                                <Setter TargetName="InstallVirtualEnv" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WillInstallPip}" Value="True" />
                                    <Condition Binding="{Binding WillInstallVirtualEnv}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="InstallPip" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="InstallVirtualEnv" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="InstallPipAndVirtualEnv" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                            <!-- Show the correct Create message, but hide both
                                 if we're not creating. -->
                            <DataTrigger Binding="{Binding UseVEnv}" Value="True">
                                <Setter TargetName="CreateVEnv" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseVEnv}" Value="False">
                                <Setter TargetName="CreateVirtualEnv" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WillCreateVirtualEnv}" Value="False">
                                <Setter TargetName="CreateVirtualEnv" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CreateVEnv" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <!-- Show messages if the flag says we should -->
                            <DataTrigger Binding="{Binding WillInstallRequirementsTxt}" Value="True">
                                <Setter TargetName="InstallRequirements" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CannotCreateVirtualEnv}" Value="True">
                                <Setter TargetName="CannotCreate" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0 7 0 0">
        <Grid Visibility="{Binding Path=NoInterpretersInstalled, Converter={StaticResource BoolToVisible}}">
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{x:Static common:Strings.AddVirtualEnvironmentWindow_NoInterpreterHelp}"
                TextWrapping="Wrap"/>
        </Grid>

        <Grid Visibility="{Binding Path=NoInterpretersInstalled, Converter={StaticResource BoolToHidden}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="514*"/>
                <ColumnDefinition Width="28"/>
                <ColumnDefinition Width="188*"/>
            </Grid.ColumnDefinitions>

            <!--Main options-->
            <ScrollViewer
                Grid.Column="0"
                VerticalScrollBarVisibility="Auto">

                <StackPanel Orientation="Vertical">
                    <!--Project-->
                    <Label
                        x:Name="ProjectLabel"
                        Content="{x:Static common:Strings.AddEnvironmentProjectLabel}"
                        Target="{Binding ElementName=ProjectComboBox}"
                        Style="{StaticResource ModernLabel}"/>

                    <ComboBox
                        x:Name="ProjectComboBox"
                        Style="{DynamicResource {x:Static ptwpf:ModernStyles.ThemedDialogComboBoxStyleKey}}"
                        Margin="0 0 0 17"
                        MinHeight="29"
                        Width="249"
                        HorizontalAlignment="Left"
                        ItemsSource="{Binding Path=Projects}"
                        SelectedItem="{Binding Path=SelectedProject}"
                        ItemTemplate="{StaticResource ProjectTemplate}"
                        AutomationProperties.AutomationId="Project"
                        AutomationProperties.LabeledBy="{Binding ElementName=ProjectLabel}"/>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0">
                            <!--Virtual environment name-->
                            <Label
                                x:Name="EnvNameLabel"
                                Content="{x:Static common:Strings.AddVirtualEnvironmentNameLabel}"
                                Target="{Binding ElementName=EnvNameTextBox}"
                                Style="{StaticResource ModernLabel}"/>

                            <TextBox
                                x:Name="EnvNameTextBox"
                                Margin="0 0 0 17"
                                MinHeight="29"
                                Width="249"
                                HorizontalAlignment="Left"
                                Text="{Binding Path=VirtualEnvName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=False}"
                                AutomationProperties.AutomationId="EnvName"
                                AutomationProperties.LabeledBy="{Binding ElementName=EnvNameLabel}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="2">
                            <!--Base interpreter-->
                            <Label
                                x:Name="BaseInterpreterLabel"
                                Content="{x:Static common:Strings.AddVirtualEnvironmentBaseInterpreterLabel}"
                                Target="{Binding ElementName=BaseInterpreterComboBox}"
                                Style="{StaticResource ModernLabel}"/>

                            <ComboBox
                                x:Name="BaseInterpreterComboBox"
                                Grid.Row="8"
                                Margin="0 0 0 17"
                                MinHeight="29"
                                Width="249"
                                HorizontalAlignment="Left"
                                Style="{DynamicResource {x:Static ptwpf:ModernStyles.ThemedDialogComboBoxStyleKey}}"
                                AutomationProperties.AutomationId="BaseInterpreter"
                                AutomationProperties.LabeledBy="{Binding ElementName=BaseInterpreterLabel}"
                                ItemsSource="{Binding Interpreters}"
                                ItemTemplate="{StaticResource NameTemplate}"
                                SelectedItem="{Binding BaseInterpreter}" />
                        </StackPanel>
                    </Grid>

                    <!--Parent folder location-->
                    <Label x:Name="LocationLabel"
                        Content="{x:Static common:Strings.AddVirtualEnvironmentLocationLabel}"
                        Style="{StaticResource ModernLabel}"/>

                    <TextBlock
                        Text="{Binding Path=LocationPath}"
                        Margin="0 0 0 7"
                        AutomationProperties.AutomationId="Location"/>

                    <Button
                        Style="{StaticResource NavigationButton}"
                        Margin="0 0 0 18"
                        Content="{x:Static common:Strings.AddVirtualEnvironmentChangeLocationLink}"
                        AutomationProperties.AutomationId="ChangeLocation"
                        Command="{x:Static l:AddVirtualEnvironmentControl.ChangeLocation}"/>

                    <!--Requirements file-->
                    <Label
                        x:Name="RequirementsPathLabel"
                        Content="{x:Static common:Strings.AddVirtualEnvironmentRequirementsPathLabel}"
                        Target="{Binding ElementName=RequirementsPathTextBox}"
                        Style="{StaticResource ModernLabel}"/>

                    <wpf:ConfigurationTextBoxWithHelp
                        x:Name="RequirementsPathTextBox"
                        Margin="0 0 0 20"
                        Text="{Binding RequirementsPath,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnNotifyDataErrors=False}"
                        Watermark="{x:Static common:Strings.AddVirtualEnvironmentFileWatermark}"
                        AutomationProperties.LabeledBy="{Binding ElementName=RequirementsPathLabel}"
                        AutomationProperties.AutomationId="RequirementsPath"
                        BrowseButtonStyle="{StaticResource BrowseOpenFileButton}"
                        BrowseCommandParameter="{x:Static common:Strings.AddVirtualEnvironmentFileBrowseFilter}"
                        BrowseAutomationName="{x:Static common:Strings.AddVirtualEnvironmentFileBrowseButton}"/>

                    <ContentControl
                        IsTabStop="False"
                        Focusable="False"
                        Content="{Binding}"
                        ContentTemplate="{StaticResource PostActions}"/>
                </StackPanel>
            </ScrollViewer>

            <!--Preview-->
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Label
                    Grid.Row="0"
                    Content="{x:Static common:Strings.AddVirtualEnvironmentPreviewLabel}"
                    Style="{StaticResource ModernLabel}"/>

                <ContentControl
                    Grid.Row="1"
                    IsTabStop="False"
                    Focusable="False"
                    Content="{Binding}"
                    ContentTemplate="{StaticResource Actions}"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
